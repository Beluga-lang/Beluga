%%% Untyped lambda-calculus
%%% Author: Frank Pfenning

term : type.  %name term M.

lam : (term -> term) -> term.
app : term -> term -> term.


%%% Parallel reduction in the untyped lambda calculus
%%% Author: Frank Pfenning

step : term -> term -> type.
                          

beta : ({x:term} step x x -> step (M1 x) (M1' x))
     ->          step M2  M2'
     ->          step (app (lam (\x. M1 x)) M2)  (M1' M2').


ap   :       step  M1 M1'
     ->      step  M2 M2'
     ->      step (app M1 M2) (app M1' M2').

lm   : ({x:term} step x  x -> step (M x)  (M' x))
     ->          step (lam (\x. M x)) (lam (\x. M' x)).

% Parallel, multi-step reduction

mstep : term -> term -> type. 
                            

id   :         mstep M M.

;    :  step M  M' -> mstep M'  M'' ->  mstep M  M''.




% Parallel conversion

equiv : term -> term -> type. 

reduce :  mstep M  M'
       -> equiv M  M'.

expand :  mstep M  M'
       -> equiv M' M.

;;     :  equiv M  M'
       -> equiv M' M''
       -> equiv M  M''.  


