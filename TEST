#!/bin/sh

# TEST: tests Beluga by calling it on various examples.
#
# Usage: TEST [options]
#
# [options], if given, are passed to bin/interpreter.
# Example: TEST +d
#
# Note that a leading '@' in a filename means that the test should NOT succeed,
#  because the file has a type error that should be caught.


# set $BELUGA to an absolute path to the toplevel .../beluga directory
#
pwd=`pwd`
BELUGA=`dirname $pwd/$0`
cd $BELUGA
BELUGA=`pwd`
# echo BELUGA: $BELUGA

# set $INTERPRETER to the executable
INTERPRETER=$BELUGA/bin/interpreter

# set $X to the `beluga' examples directory
X=$BELUGA/examples
cd $X

$INTERPRETER  \
    $* \
    arith/arith.bel \
    count-var/cntvar.bel \
    count-var/cntvar-explicit.bel \
    count-var/cntvar-2.bel \
    copy/copy.bel \
    copy/copy-explicit.bel \
    copy/copy-simple.bel \
    copy/copy-simple-explicit.bel \
    free-vars/fvnat.bel \
    free-vars/fvnat-explicit.bel \
    lp-horn/sources.cfg \
    mini-ml/eval-sub-1.bel \
    mini-ml/eval-sub-1-explicit.bel \
    mini-ml/eval-sub.bel \
    mini-ml/eval-sub-explicit.bel \
    mini-ml/tps.bel \
    mini-ml/vsound.bel \
    mini-ml/vsound-explicit.bel \
    small-step/lam.bel \
    typed-eval/tpeval.bel \
    typed-eval/tpeval-explicit.bel \
    typed-eval/tpeval2.bel \
    test/backarrow.bel \
    test/case1.bel \
    test/case1-explicit.bel \
    test/case2.bel \
    test/case2-explicit.bel \
    test/cross.bel \
    test/dependency.bel \
    test/id.bel \
    test/id-simple.bel \
    test/id-explicit.bel \
    test/test.bel \
    test/test-simple.bel \
    test/test-simple-explicit.bel \
    test/schema.bel \
    @test/sigma1.bel \
    notworking/debruijn/mini-ml.bel \
    notworking/debruijn1/mini-ml.bel \

     
#    notworking/church-rosser.rec \
#    notworking/cut-elim.bel \
#    notworking/eq-proof.bel \
#    notworking/fol-handbook.bel \
#    notworking/tpcert.bel \
#    notworking/tpeval.bel \


# *** Needs to be updated for new syntax: ***
#    @tests/fvnat.rec
