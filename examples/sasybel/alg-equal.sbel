%{ Sasybel Development
Author: Marie-Andree B.Langlois
}%
terminals lam
syntax 

term ::= term -> term | x | lam \x .term[x] ;

judgment aeq : term a= term;

E1 a= F1;  
E2 a= F2;
--------------------------- ae_a
(E1 -> E2) a= (F1 -> F2);

{x:term} x a= x;  
E[x] a= E[x];
----------------------------------- ae_l
(lam \x . E[x]) a= (lam \x . F[x]);

judgment deq : term d= term;

T1 d= S1;  
T2 d= S2;
--------------------------- de_a
(T1 -> T2) d= (S1 -> S2);

{x:term} x d= x;  
T[x] d= T'[x];
------------------------------------ de_l
(lam \x . T[x]) d= (lam \x . T'[x]);

------- de_r
T d= T;

T d= R;  
R d= S;
------- de_l
T d= S;

context aCtex ::= (x:term) x a= x;
context adCtex ::= (x:term, u: x a= x) x d= x;

% theorem ref : forall [g: aCtex] |- (M:term) exists [g] |- M .. a= M ..;

