term :  type.
z    : term.
suc  : term -> term.

schema termCtx = some [] term;

rec copy : [. term] -> [. term] = fn e =>
  case e of
  | [. z]     => [. z]
  | [. suc U] => let [. V] = copy [. U] in [. suc V];

%{
rec copy : {g:termCtx} [g. term] -> [g. term] =
FN g => fn e =>
 (case e of
  | [g]  z     => [g] z
  | [g] suc (U ..) => let [g] V .. = copy [g] ([g] U ..) in [g] suc (V .. )
);
}%
