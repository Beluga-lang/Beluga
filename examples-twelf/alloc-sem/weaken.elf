%%% Simply Typed Lambda Calculus w/ small-step, allocation semantics
%%% Author: Matthew Fluet (June 2005)
%%% weaken.elf

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Weaken Store Typing
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% sttp_lookup
sttp_weak_sttp_lookup
               : sttp_lookup ST1 L T ->
                 sttp_extend ST1 ST2
                  -> sttp_lookup ST2 L T -> type.
%mode sttp_weak_sttp_lookup +DSttpLookup1 +DSttpExtend -DSttpLookup2.
-hit_hit       : sttp_weak_sttp_lookup (sttp_lookup_hit)
		                       (sttp_extend_cons_hit DSttpExtend')
		                       (sttp_lookup_hit).

-miss_hit      : sttp_weak_sttp_lookup (sttp_lookup_miss DSttpLookup DLocLt)
                                       (sttp_extend_cons_hit DSttpExtend')
                                       (sttp_lookup_miss DSttpLookup''  DLocLt)
		  <- sttp_weak_sttp_lookup DSttpLookup
                                           DSttpExtend'
                                           DSttpLookup''.


-hit_miss      : sttp_weak_sttp_lookup (sttp_lookup_hit)
                                       (sttp_extend_cons_miss DSttpExtend' DLocLt')
                                       (sttp_lookup_miss DSttpLookup'' DLocLt')
		  <- sttp_weak_sttp_lookup (sttp_lookup_hit)
                                           DSttpExtend'
                                           DSttpLookup''.

-miss_miss     : sttp_weak_sttp_lookup (sttp_lookup_miss DSttpLookup DLocLt)
                                       (sttp_extend_cons_miss DSttpExtend' DLocLt')
                                       (sttp_lookup_miss DSttpLookup'' DLocLt'')
		  <- sttp_weak_sttp_lookup (sttp_lookup_miss DSttpLookup DLocLt)
                                           DSttpExtend'
                                           DSttpLookup''
		  <- loc_lt_trans DLocLt DLocLt' DLocLt''.

%terminates DSttpExtend (sttp_weak_sttp_lookup _ DSttpExtend _).
%worlds () (sttp_weak_sttp_lookup _ _ _).
%covers sttp_weak_sttp_lookup +DSttpLookup1 +DSttpExtend -DSttpLookup2.
%total DSttpExtend (sttp_weak_sttp_lookup _ DSttpExtend _).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% loc_judg
sttp_weak_loc_judg : loc_judg ST1 L T -> sttp_extend ST1 ST2
                  -> loc_judg ST2 L T -> type.

%mode sttp_weak_loc_judg +DLocTc +DSttpExtend -DLocTc'.

sttp_weak_loc_judg_
               : sttp_weak_loc_judg (loc_judg_ DSttpLookup) DSttpExtend (loc_judg_ DSttpLookup')
		  <- sttp_weak_sttp_lookup DSttpLookup DSttpExtend DSttpLookup'.

%terminates {} (sttp_weak_loc_judg _ _ _).
%worlds () (sttp_weak_loc_judg _ _ _).
%covers sttp_weak_loc_judg +DLocTc +DSttpExtend -DLocTc'.
%total {} (sttp_weak_loc_judg _ _ _).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% exp_judg
sttp_weak_exp_judg
               : exp_judg ST1 E T ->
                 sttp_extend ST1 ST2
                  -> exp_judg ST2 E T -> type.
%mode sttp_weak_exp_judg +DExpTc1 +DSttpExtend -DExpTc2.
-var           : sttp_weak_exp_judg (exp_judg_var DVarTc)
                                 DSttpExtend
		                 (exp_judg_var DVarTc).
-loc           : sttp_weak_exp_judg (exp_judg_loc DLocTc)
                                 DSttpExtend
                                 (exp_judg_loc DLocTc')
		  <- sttp_weak_loc_judg DLocTc DSttpExtend DLocTc'.
-lam           : sttp_weak_exp_judg (exp_judg_lam (\x. \d. DExpTcF x d))
                                 DSttpExtend
                                 (exp_judg_lam (\x. \d. DExpTcF' x d))
		  <- ({x : exp} {dVarTcX : var_judg x Tx }
			sttp_weak_exp_judg (DExpTcF x dVarTcX) DSttpExtend  (DExpTcF' x dVarTcX)).


-app           : sttp_weak_exp_judg (exp_judg_app DExpTcE2 DExpTcE1 )
                                 DSttpExtend
                                 (exp_judg_app DExpTcE2' DExpTcE1')
		  <- sttp_weak_exp_judg DExpTcE1 DSttpExtend DExpTcE1'
		  <- sttp_weak_exp_judg DExpTcE2 DSttpExtend DExpTcE2'.
-unit          : sttp_weak_exp_judg (exp_judg_unit)
                                 DSttpExtend
                                 (exp_judg_unit).
-letunit       : sttp_weak_exp_judg (exp_judg_letunit DExpTcE2 DExpTcE1)
                                 DSttpExtend
                                 (exp_judg_letunit DExpTcE2' DExpTcE1')
		  <- sttp_weak_exp_judg DExpTcE1 DSttpExtend DExpTcE1'
		  <- sttp_weak_exp_judg DExpTcE2 DSttpExtend DExpTcE2'.
-pair          : sttp_weak_exp_judg (exp_judg_pair DExpTcE2 DExpTcE1)
                                 DSttpExtend
                                 (exp_judg_pair DExpTcE2' DExpTcE1')
		  <- sttp_weak_exp_judg DExpTcE1 DSttpExtend DExpTcE1'
		  <- sttp_weak_exp_judg DExpTcE2 DSttpExtend DExpTcE2'.
-letpair       : sttp_weak_exp_judg (exp_judg_letpair (\x. \d1. \y. \d2. DExpTcF2 x d1 y d2) DExpTcE1)
                                 DSttpExtend
                                 (exp_judg_letpair (\x. \d1. \y. \d2. DExpTcF2' x d1 y d2)  DExpTcE1')
		  <- sttp_weak_exp_judg DExpTcE1 DSttpExtend DExpTcE1'
		  <- ({x:exp}{dVarTcX : var_judg x Tx}
		      {y:exp}{dVarTcY : var_judg y Ty}
			sttp_weak_exp_judg (DExpTcF2 x dVarTcX y dVarTcY)
                                        DSttpExtend
                                        (DExpTcF2' x dVarTcX y dVarTcY)).
%terminates DExpTc (sttp_weak_exp_judg DExpTc _ _).
%worlds (var_judg_block) (sttp_weak_exp_judg _ _ _).
%covers sttp_weak_exp_judg +DExpTc +DSttpExtend -DExpTc'.
%total DExpTc (sttp_weak_exp_judg DExpTc _ _).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% val_judg
sttp_weak_val_judg
               : val_judg ST1 V T ->
                 sttp_extend ST1 ST2
                  -> val_judg ST2 V T -> type.
%mode sttp_weak_val_judg +DValTc1 +DSttpExtend -DValTc2.
-lam           : sttp_weak_val_judg (val_judg_lam (\x. \d. DExpTcF x d))
                                 DSttpExtend
                                 (val_judg_lam (\x. \d. DExpTcF' x d))
		  <- ({x:exp}{dVarTcX : var_judg x Tx}
			sttp_weak_exp_judg (DExpTcF x dVarTcX)
			                DSttpExtend
                                        (DExpTcF' x dVarTcX)).
-unit          : sttp_weak_val_judg (val_judg_unit)
                                 DSttpExtend
                                 (val_judg_unit).
-pair          : sttp_weak_val_judg (val_judg_pair DLocTcL2 DLocTcL1)
                                 DSttpExtend
                                 (val_judg_pair DLocTcL2' DLocTcL1')
		  <- sttp_weak_loc_judg DLocTcL1 DSttpExtend DLocTcL1'
		  <- sttp_weak_loc_judg DLocTcL2 DSttpExtend DLocTcL2'.
%terminates {} (sttp_weak_val_judg _ _ _).
%worlds (var_judg_block) (sttp_weak_val_judg _ _ _).
%covers sttp_weak_val_judg +DValTc +DSttpExtend -DValTc'.
%total {} (sttp_weak_val_judg _ _ _).
