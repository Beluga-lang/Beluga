%{
  CH 3:  Untyped arithmetic expressions
  Author: Brigitte Pientka

  EVALUATION RULES AND META-THEORY

}%

% ---------------------------------------------------------- %

% VALUES

value     : term -> type.
num_value : term -> type.

v_true : value true.
v_false: value false.

v_num  : num_value N -> value N.
v_z    : num_value z.v_s    : num_value N -> num_value (succ N).


% ---------------------------------------------------------- %
% Small-step operational semantics
step: term -> term -> type.


e_succ:
   step T T'
-> step (succ T) (succ T').

e_pred_zero:
   step (pred z) z.

e_pred_succ:
    num_value N ->
  step (pred (succ N)) N.

e_pred:
   step T T'
-> step (pred T) (pred T').


% ---------------------------------------------------------- %
%{
  Equality between terms
}%
equal: term -> term -> type.
ref: equal T T.

% -------------------------------------------------------- %
%{
Determinacy of evaluation:

Theorem: if step T T1 and step T T2 then equal T1 T2.

}%

steps_to_terms: term -> term -> term -> type.
andalso: step T T1 -> step T T2 -> steps_to_terms T T1 T2.

not_possible : type.

rec values_dont_step : [ |- step M M'] -> [ |- num_value M ] -> [ |- not_possible]=
/ total v (values_dont_step m m' s v)/
fn s => fn v => case v of
| [ |- v_z]   => impossible s % (case s of [ |- {}] )
| [ |- v_s V] =>
    (case s of [ |- e_succ D] =>
		values_dont_step [ |- D] [ |- V])
;


rec det : [ |- steps_to_terms T T1 T2] -> [ |- equal T1 T2] =
 % / total s (det t t1 t2 s)/
fn s => case s of

| [ |- andalso (e_succ D)        (e_succ F)]   =>
  let [ |- ref] = det [ |- andalso D F] in [ |- ref]

| [ |- andalso (e_pred_zero)     (e_pred_zero)]    => [ |- ref]

| [ |- andalso (e_pred_succ _ )  (e_pred_succ _ )] => [ |- ref]

| [ |- andalso (e_pred D)         (e_pred F)]   =>
    let [ |- ref] = det [ |- andalso D F] in [ |- ref]

% Not_Possible cases for pred
| [ |- andalso (e_pred D)          (e_pred_succ V )]    =>
   impossible values_dont_step [ |- D] [ |- v_s V]
| [ |- andalso (e_pred_succ V )       (e_pred D)]       =>
   impossible values_dont_step [ |- D] [ |- v_s V]

;
