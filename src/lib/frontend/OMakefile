# -*- coding: utf-8; indent-tabs-mode: nil; -*-

# Declare the directories we need to include other libraries from
OCAMLINCLUDES += ../core

# Declare the names of the libraries we depend on
OCAML_LIBS[]  +=
        ../lib/beluga-core

# Declare an OCaml library
LIBRARY        = beluga-frontend

# Declare an OCaml package
PACK           = Frontend

# Declare the files the package will contain
FILES[] =
        parser
	token

# Declare one pseudo target for the lexer
.PHONY: lexer

.DEFAULT: frontend

clean:
        rm $(filter-proper-targets $(ls R, .))
        rm $(filter %.omc,         $(ls R, .))

frontend: lexer files pack $(OCamlLibrary $(LIBRARY), $(PACK))

pack: $(OCamlPackage $(PACK), $(FILES) lexer)

# **NOTE** Because of the way scoping for OCAMLFLAGS works, the pack
# target must come _BEFORE_ the files target, otherwise pack will be
# passed the -for-pack flag as well, which is not what we want

# Use the -for-pack flag for compiling the individual modules
OCAMLFLAGS += -for-pack $(PACK)
files: $(addsuffixes $(if $(BYTE_ENABLED), .cmo) $(if $(NATIVE_ENABLED), .cmx), $(FILES))

# Turn off unused variable warning only for the lexer; needed for
# dummy variables created by ulex / camlp4
OCAMLFLAGS += -w z
lexer: $(addsuffixes $(if $(BYTE_ENABLED), .cmo) $(if $(NATIVE_ENABLED), .cmx), lexer)
