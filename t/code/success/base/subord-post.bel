% coverage/subordination example;
%   same as subord.bel but includes a post-case-expression LF declaration.

bool : type.

term :type.
z    : term.
suc  : term -> term.
eq : term -> term -> bool.

after : term -> bool -> bool.

schema termCtx = term;
schema boolCtx = bool;

rec fff : {g:boolCtx} [g, xx : bool |- bool] -> [ |- term] =
mlam g => fn e =>
  case e of --not        % Shouldn't cover, due to "after" term constructor
  | [g, xx : bool |- eq U V]    => [ |- z]
  | [g, xx : bool |- #px]       => [ |- z]
;

rec fff2 : {g:boolCtx} [g, xx : bool |- bool] -> [ |- term] =
mlam g => fn e =>
  case e of
  | [g, xx : bool |- eq Ux Vx] => [ |- z]
  | [g, xx : bool |- #px]      => [ |- z]
;
