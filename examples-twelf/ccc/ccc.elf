%%% Cartesian closed category

%% Categorical language

% objects
obj : type.  %name obj A.

% morphisms
mor : obj -> obj -> type.  %name mor F.

% morphism equality
eq : mor A B -> mor A B -> type.  %name eq ME.

% morphisms
idc : mor A A.
@   : mor B C -> mor A B -> mor A C.

% equations
refl : eq F F.
trans : eq F F' -> eq F' F'' -> eq F F''.
sym  : eq F F' -> eq F' F.

eq_o : eq F F' -> eq G G' -> eq (@ F G) (@ F' G').

id_l : eq (@ idc F) F.
id_r : eq (@ F idc) F.
ass  : eq (@ H (@ G F)) (@ (@ H G) F).

%% Products

% objects
one   : obj.
cross : obj -> obj -> obj.

% morphisms
drop : mor A one.

fst  : mor (cross A B) A.
snd  : mor (cross A B) B.
pair : mor A B -> mor A C -> mor A (cross B C).

% equations
eq_pair : eq F F' -> eq G G' -> eq (pair F G) (pair F' G').

term_u : eq H drop.

prod_l : eq (@ fst (pair F G)) F.
prod_r : eq (@ snd (pair F G)) G.
prod_u : eq (pair (@ fst H) (@ snd H)) H.

%% Exponentials

% objects
arrow : obj -> obj -> obj.

% morphisms
app : mor (cross (arrow B C) B) C.
cur : mor (cross A B) C -> mor A (arrow B C).

% equations
eq_cur : eq F F' -> eq (cur F) (cur F').

exp_e : eq (@ app (pair (@ (cur F) fst) snd)) F.
exp_u : eq (cur (@ app (pair (@ G fst) snd))) G.
