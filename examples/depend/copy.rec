tp: type.
arrow: tp -> tp -> tp.

term : tp -> type.
lam  : (term T -> term T') -> term (arrow T T').

schema W = some [T:tp] block term T;

rec copy : {g:(W)*} (term T![.]!)[g] -> (term T![.]!) [g] =
FN g => 
  fn e =>
   (case e of
   
      box(g . #p![id]!)  => box(g . #p![id]!)

    | box(g . lam  (\x. U![id, x]!)) 
       => (case copy [g, x:term _] box(g,x . U![id, x]!) of

            box(g,x : term _ . V![id, x]!) 
                 => box(g . lam  (\x. V![id , x]!)))


);
