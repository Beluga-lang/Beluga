LF a : type =;

schema ctx = a;

LF nat : type =
  | zero : nat
  | succ : nat → nat
;

rec length : {g : ctx} → [⊢ nat] =
mlam g ⇒ case [g] of
  | [] ⇒ [⊢ zero]
  | [g', x : a] ⇒
        let [⊢ N] = length [g'] in
        [⊢ succ N]
;
