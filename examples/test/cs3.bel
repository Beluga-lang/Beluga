irrel : type.
irrel_ctor : irrel.

tp : type.
nat : tp.

term : tp -> type.
z    : term nat.
suc  : term nat -> term nat.


schema termCtx = some [t:tp] block galaga:term t, wasted:irrel. term t;


rec fff : {g:(termCtx)*} (term nat)[g] -> (term nat)[g] =
FN g => fn e =>
  case e of
  | [g]  z     => [g] z
  | [g]  suc (U ..)   => [g] z
  | [g]  #p.1 ..   => [g] z
  | [g]  #p.3 ..   => [g] z
;



rec fffRedundantWrongProjCases : {g:(termCtx)*} (term nat)[g] -> (term nat)[g] =
FN g => fn e =>
  case e of %not
  | [g]  z     => [g] z
  | [g]  suc (U ..)   => [g] z
  | [g]  #p.1 ..   => [g] z
  | [g]  #p.1 ..   => [g] z
;



rec fffForgotBothProjCases : {g:(termCtx)*} (term nat)[g] -> (term nat)[g] =
FN g => fn e =>
  case e of %not
  | [g]  z     => [g] z
  | [g]  suc (U ..)   => [g] z
;


rec fffForgot1stProjCase : {g:(termCtx)*} (term nat)[g] -> (term nat)[g] =
FN g => fn e =>
  case e of %not
  | [g]  z     => [g] z
  | [g]  suc (U ..)   => [g] z
  | [g]  #p.3 ..   => [g] z
;


