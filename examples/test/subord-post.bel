% coverage/subordination example;
%   same as subord.bel but includes a post-case-expression LF declaration,
%   demonstrating the need to postpone coverage to the end of a session.

bool : type.

term :type.
z    : term.
suc  : term -> term.
eq : term -> term -> bool.

schema termCtx = term;
schema boolCtx = bool;

rec fff : {g:(boolCtx)*} bool[g, xx : bool] -> term[] =
FN g => fn e =>
  case e of %not        % Shouldn't cover, due to "after" term constructor declared later
  | [g, xx : bool]  eq U V     => [] z
%  | [g, xx : bool]  eq (U ..) V     => [] z
%  | [g, xx : bool]  eq (U ..) (V .. xx)     => [] z
  | [g, xx : bool]  #p .. xx   => [] z
;

after : term -> bool -> term.

rec fff : {g:(boolCtx)*} bool[g, xx : bool] -> term[] =
FN g => fn e =>
  case e of
  | [g, xx : bool]  eq (U .. xx) (V .. xx)     => [] z
  | [g, xx : bool]  #p .. xx   => [] z
;
