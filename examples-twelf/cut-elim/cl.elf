%%% Cut-Free Classical Sequent Calculus
%%% Author: Frank Pfenning

bot : type.         % Token (for contradiction)
neg : o -> type.  % Hypotheses (left)
pos : o -> type.  % Conclusions (right)
%name bot D.
%name neg N.
%name pos P.

axiom' : (neg A -> pos A -> bot).

andr'  : (pos A -> bot)
	  -> (pos B -> bot)
	  -> (pos (and A B) -> bot).

andl1' : (neg A -> bot)
	  -> (neg (and A B) -> bot).

andl2' : (neg B -> bot)
	  -> (neg (and A B) -> bot).

impr'  : (neg A -> pos B -> bot)
	  -> (pos (imp A B) -> bot).

impl'  : (pos A -> bot)
	  -> (neg B -> bot)
	  -> (neg (imp A B) -> bot).

orr1'  : (pos A -> bot)
	 -> (pos (or A B) -> bot).

orr2'  : (pos B -> bot)
	  -> (pos (or A B) -> bot).

orl'   : (neg A -> bot)
	 -> (neg B -> bot)
	 -> (neg (or A B) -> bot).

notr'  : (neg A -> bot)
	  -> (pos (not A) -> bot).

notl'  : (pos A -> bot)
	  -> (neg (not A) -> bot).

truer' : (pos (true) -> bot).

falsel' : (neg (false) -> bot).

forallr' : ({a:i} pos (A a) -> bot)
	    -> (pos (forall A) -> bot). 

foralll' : {T:i} (neg (A T) -> bot)
	    -> (neg (forall  A) -> bot).

existsr' : {T:i} (pos (A T) -> bot)
	    -> (pos (exists A) -> bot).

existsl' : ({a:i} neg (A a) -> bot)
	    -> (neg (exists A) -> bot).
