module Nats = struct
  nat : type.
  z : nat.
  s : nat -> nat.

  rec suc : [ |- nat ] -> [ |- nat] =
  fn n => let [ |- N ] = n in [ |- s N];

  let two = [ |- s (s z)];
  let three = suc two;
end;

--abbrev UnboundModule U.
