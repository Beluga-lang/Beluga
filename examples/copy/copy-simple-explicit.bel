
term :  type.
lam  : (term -> term) -> term.

schema tctx = some [] term;

% Doesn't cover, and not used below.  Commented out  -jd 2010-05-23
%
% rec copy' : term [ ] -> term [ ] =
%  fn t =>  case t of [ ] lam (\x . x) : term[ ] => t
% ;

rec copy : {g:tctx} [g. term] -> [g. term] =
mlam g => fn e =>
 (case e of
    {#p:[g. term]}
     [g. (#p ..)] : [g. term] => [g. (#p ..)]

  | {U:[g, x : term. term]}
    [g. lam (\x. (U .. x))] : [g. term] =>

       (case (copy [g, x:term]  [g,x. (U .. x)]) of

          {V: [g, x : term. term]}

           [g,x:term . (V .. x)] : [g,x:term. term] =>
             [g. lam (\x. (V .. x))])
);
