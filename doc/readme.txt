Information about the tool to generate LaTeX


HOW TO USE :

You need to make a directory called Latex and simply run Beluga on any source file, it will generate two .tex files in the Latex directory you have created :
    1) a main file to run 
    2) a maccros file which you can modify to customize what the main file will output (you can keep the default maccros generated)




GENERAL STRUCTURE OF CODE (if you want to contribute) :

- For now the entry point is in logic.ml : since the flag to run logic is on by default, LaTeX is generated by default


- There are four new .ml files in core 
    1) latex.ml : used to generate induction rules in LaTeX for LF types + acts as interface for the whole LaTeX generation process (calls main function in latexinductive.ml and latexrec.ml)

    2) latexinductive.ml : used to generate definitions for inductive/stratified types

    3) latexrec.ml : used to generate LaTeX for recursive functions, the theorem statement is generated in this file and the proof is generated by calling the main function of latexproof.ml

    4) latexproof.ml : used to generate the proof


- We use annotated.ml and annotate.ml for Steven's work on the construction of the annotated syntax tree
    -> I added/edited some pretty printing functions in annotate.ml (otherwise the file is unchanged)




SIMPLE GENERAL THINGS TO DO :
- put the entry point in main instead of logic
- make a flag for latex generation in main as there is one to run logic 
- generate files called name_of_source_file.tex and name_of_source_file_maccros.tex instead of the generic hardcoded main.tex and maccros.tex



