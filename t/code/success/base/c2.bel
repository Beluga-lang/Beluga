term :  type.
z    : term.


schema termCtx = some [] term;

rec copyBad : {g:termCtx} [g |- term] -> [g |- term] =
/ total e (copyBad g e)/
mlam g => fn e =>
 (case e of --not
  | [g |- z]     => [g |- z]
);

rec copyGood : {g:termCtx} [g |- term] -> [g |- term] =
/ total e (copyGood g e)/
mlam g => fn e =>
 (case e of
  | [g |- z]     => [g |- z]
  | [g |- #p[..]] => [g |- #p[..]]
);

rec copyXBad1 : {g:termCtx} [g, x:term |-  term] -> [g, x:term |-  term] =
/ total e (copyXBad1 g e)/
mlam g => fn e =>
 (case e of --not
  | [g,x:term |-  z]     => [g,x:term |-  z]
  | [g,x:term |-  x]     => [g,x:term |-  x]
);

rec copyXBad2 : {g:termCtx} [g, x:term |-  term] -> [g, x:term |-  term] =
/ total e (copyXBad2 g e)/
mlam g => fn e =>
 case e of --not
 | [g,x:term |-  z]     => [g,x:term |-  z]
 | [g,x:term |-  #p[..]] => [g,x:term |-  #p[..]]
;


rec copyXGood : {g:termCtx} [g |- term] -> [g |- term] =
/ total e (copyXGood g e)/
mlam g => fn e =>
  case e of
  | [g,x:term |-  x]     => [g,x:term |-  x]
  | [g,x:term |-  #p[..]] => [g,x:term |-  #p[..]]
  | [g |- z] => [g |- z]
;

rec copyXGood2 : {g:termCtx} [g |- term] -> [g |- term] =
/ total e (copyXGood2 g e)/
mlam g => fn e =>
 (case e of
  | [g,x:term |-  z]     => [g,x:term |-  z]
  | [g,x:term |-  x]     => [g,x:term |-  x]
  | [g,x:term |-  #p[..]] => [g,x:term |-  #p[..]]
  | [g |- z] => [g |- z]
);
