schema ctx = !v A;

rec identity : {P:: atm [ ]}  (!^ (imp (atom P ) (atom P)))[ ] =
mlam Q =>
   [ ] impI^ (\u. close u) ;

rec identity'' :  (!^ (imp (atom P ) (atom P)))[ ] =
   [ ] impI^ (\u. close u) ;


rec identity' : {g:(ctx)*}{P:: atm [g]}  (!^ (imp (atom (P ..)) (atom (P ..))))[g] =
FN g =>  mlam Q =>
   [g] impI^ (\u. close u) ;

rec curry : {P:: atm [ ]} {Q:: atm [ ]} {R:: atm [ ]}
            ( !^ (imp (imp (& (atom P) (atom Q)) (atom  R))
	              (imp (atom  P) (imp (atom Q) (atom R)))))[ ] =
mlam P => mlam Q => mlam R =>
 [ ] impI^ (\w. impI^ (\u. impI^ (\v. close( impEv w (andI^ (close u) (close v))   ))))
;


rec uncurry : {P:: atm [ ]} {Q:: atm [ ]} {R:: atm [ ]}
            ( !^ (imp
	              (imp (atom  P) (imp (atom Q) (atom R)))
		      (imp (& (atom P) (atom Q)) (atom  R)) ))[ ] =
mlam P => mlam Q => mlam R =>
  [ ] impI^ (\w. impI^ (\u. close ( impEv (impEv w (close (andEvL u)))  (close (andEvR u)))))
;

rec curry' :
            ( !^ (imp (imp (& (atom P) (atom Q)) (atom  R))
	              (imp (atom  P) (imp (atom Q) (atom R)))))[ ] =

 [ ] impI^ (\w. impI^ (\u. impI^ (\v. close( impEv w (andI^ (close u) (close v))   ))))
;


rec uncurry' : ( !^ (imp
	              (imp (atom  P) (imp (atom Q) (atom R)))
		      (imp (& (atom P) (atom Q)) (atom  R)) ))[ ] =

  [ ] impI^ (\w. impI^ (\u. close ( impEv (impEv w (close (andEvL u)))  (close (andEvR u)))))
;


rec split : !^ (imp (imp (atom P) (& (atom Q)  (atom R)))
                    (& (imp (atom P) (atom Q))  (imp (atom P) (atom R))))[ ] =
 [ ] impI^ (\w.  (andI^
       (impI^  (\u.(close  (andEvL  (impEv w (close u))    )  ) ) )
       (impI^  (\u.(close  (andEvR  (impEv w (close u))    )  ) ) )

     ))
;


rec join :  !^ (imp (& (imp (atom P) (atom Q))  (imp (atom P) (atom R)))
                    (imp (atom P) (& (atom Q)  (atom R))) )[ ] =
[ ] impI^ ( \w. impI^ (\u. (andI^
          (close   (impEv (andEvL w) (close u) ))
          (close   (impEv (andEvR w) (close u) ))
                           )
                      )

          )
;


