nat: type.
z   : nat.
suc : nat -> nat.

irrelevancy : type.
irrelevant_con : irrelevancy.

schema w = block nat;

rec copynat : {g:(w)*} (nat)[g] -> (nat)[g] =
   FN g => fn e =>
     case e of box (g. z) : nat[g] => box(g. z)
             | {U::nat[g]}
               box (g . suc U![id]!) : nat[g] => copynat [g] box (g . U![id]!)
    
;
