-*- coding: utf-8; indent-tabs-mode: nil; -*-

This document describes the compilation and installation procedures
for Beluga.


*      [Pre-requisites](#01)

*      [Building](#02)

*      [Installing](#03)


Pre-requisites
==============

*IMPORTANT NOTE: Before downloading and installing any of these, or
 giving up in despair, see the following section about the OCaml GODI
 distribution.*

* [ocaml 3.10][01] or greater
* [camlp5][02]
* [extlib][03]
* [ledit][04]
* [ulex][05]
* [OUnit][06]

[01]: http://caml.inria.fr/download.en.html
[02]: http://pauillac.inria.fr/~ddr/camlp5/
[03]: http://code.google.com/p/ocaml-extlib/downloads/list
[04]: http://cristal.inria.fr/~ddr/ledit/
[05]: http://www.cduce.org/download.html#side
[06]: http://www.xs4all.nl/~mmzeeman/ocaml/

GODI
====

The above list of required packages may seem excessive and you may
feel that you shouldn't have to manually download and install five or
more separate packages to compile this software.  We agree with you.
That's why, rather than downloading the extremely barebones OCaml
compiler, you can instead download the OCaml [GODI][07] distribution
and have it automatically take care of downloading and installing the
necessary packages for you.

[07]: http://godi.camlcity.org/godi/index.html

GODI Installation Instructions
------------------------------

1. Download the most recent GODI tarball, e.g.,
   `godi-rocketboost-20080630.tar.gz`

2. Extract the GODI tarball to somewhere convenient, e.g.,
   `/tmp/godi-rocketboost-20080630`

3. `cd /tmp/godi-rocketboost-20080630` or wherever you extracted to.

4. Run the first bootstrap script, placing the GODI installation
   somewhere convenient, e.g.,

       $ ./bootstrap -prefix ~/local/GODI`

5. After the bootstrap completes, make sure to add the GODI bin and
   man directories to your $PATH and $MANPATH variables respectively,
   e.g.,

       # GODI
       export PATH=~/local/GODI/bin:~/local/GODI/sbin:$PATH
       export MANPATH=~/local/GODI/man:$MANPATH

6. Either reload your terminal, or refresh your shell configuration,
   e.g.,

       $ source ~/.profile`

   if you use `~/.profile` to set your environment variables.

7. Still within `/tmp/godi-rocketboost-20080630`, run

       $ ./bootstrap_stage2

   During this phase, your GODI installation will synchronize with the
   central GODI repository and obtain the necessary information to
   download and build the packages.

   *NOTE: If this stage failes, it may give you a message about PCRE
   not being found.  If this is the case, edit and uncomment the line:
   `GODI_BASEPKG_PCRE=yes` in `~/local/GODI/etc/godi.conf`, then rerun
   `./bootsstrap_stage2`.*

   This phase will take a little while since it will download,
   compile, and install the basic ocaml compiler and several other
   fundamental packages.  Once the second bootstrap phase has
   completed, you have a basic GODI installation.

8. Now we will install the Beluga dependencies mentioned above.  To do
   so, run the following commands:

       $ godi_wish -build apps-ledit -build godi-extlib \
       $ -build godi-ounit -build godi-ulex && godi_perform -wishes

   You should now see GODI begin to build and install the packages.
   This part should go pretty quickly.  Once this stage finishes, you
   are ready to follow the build instructions below for Beluga itself.

Building
========

For the moment, the only supported targets are:

    $ make

or

    $ make interactive

`make` will build everything, including the `Core` and `Frontend`
modules and the simple `interpreter` tool.  `make interactive` will
build and run a custom Ocaml toplevel with the `Core` and `Frontend`
modules loaded.
