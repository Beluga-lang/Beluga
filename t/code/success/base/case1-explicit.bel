nat: type.
z   : nat.
suc : nat -> nat.

schema w = nat;

rec copynat1 : {g:w} [g |- nat] -> [g |- nat] =
  mlam g => fn e => copynat1 [g] e;


rec copynat : {g:w} [g |- nat] -> [g |- nat] =
mlam g =>
 fn e =>
  case e of --not
    [g |- z] : [g |- nat] => [g |- z]
  | {U : [g |- nat]} [g |- suc (U[..])]   : [g |- nat] => copynat [g] [g |- (U[..])]
;
