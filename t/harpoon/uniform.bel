%%% Uniform Derivations
%%% Author: Frank Pfenning
%%% Temporarily removed parametric and hypothetical judgments

i : type.  % individuals

% Propositions
LF o       : type =
  | q      : o               % Atomic Formulae
  | imp    : o → o → o
  | forall : (i → o) → o   
;

schema ctx = i;

LF gamma   : type =
   | Empty : gamma
   | Dec   : gamma → o → gamma
;

inductive Lookup : (g:ctx) {G : [g ⊢ gamma]} {P : [g ⊢ o]} ctype =
  | head     : Lookup [g ⊢ Dec G P] [g ⊢ P]
  | tail     : Lookup [g ⊢ G] [g ⊢ P]
	       → Lookup [g ⊢ Dec G P'] [g ⊢ P]
;

% solve goal formulas
inductive Solve  : (g:ctx) [g ⊢ gamma] → [g ⊢ o] → ctype =
  | impR       : Solve [g ⊢ Dec G P1] [g ⊢ P2]
	         → Solve [g ⊢ G] [g ⊢ imp P1 P2]
  | forallR    : Solve [g, x:i ⊢ G[..]] [g, x:i ⊢ P]
	         → Solve [g ⊢ G] [g ⊢ forall (\x. P)]
  | transition : Focus [g ⊢ G] [g ⊢ P'] [g ⊢ q]
	         → Lookup [g ⊢ G] [g ⊢ P']
	         → Solve [g ⊢ G] [g ⊢ q]
and inductive Focus : (g:ctx) [g ⊢ gamma] → [g ⊢ o] → [g ⊢ o] -> ctype =
      | impL    : Focus [g ⊢ G] [g ⊢ P2] [g ⊢ q]
	          → Solve [g ⊢ G] [g ⊢ P1]
	          → Focus [g ⊢ G] [g ⊢ imp P1 P2] [g ⊢ q]
      | forallL : Focus [g ⊢ G] [g ⊢ P[..,t]] [g ⊢ q]
		  → Focus [g ⊢ G] [g ⊢ forall (\x. P)] [g ⊢ q]
      | init    : Focus [g ⊢ G] [g ⊢ q] [g ⊢ q]
;

proof t1 : {g : ctx} Solve [g |- Dec Empty q] [g |- q] =
/ total /
intros
{ g : ctx
| 
; solve transition init head
}
;

proof t2 : Solve [x : i |- Dec Empty q] [x : i |- q] =
/ total /
solve transition init head
;

proof triv3 : Solve [ |- Dec Empty q] [ |- q] =
/ total /
solve transition init head
;

proof s2 : {P1 : (x : i |- o)}
             Solve [x : i |- Dec (Dec Empty q) P1] [x : i |- q] =
/ total /
intros
{ P : (x : i |- o)
| 
; solve transition init (tail head)
}
;
