--nostrengthen

i : type.
o : type.
p : type.

atom   : p -> o.
conj   : o -> o -> o.  %% infix right 11 conj.
imp    : o -> o -> o.  %% infix right 10 imp.
true   : o.
forall : (i -> o) -> o.

pf : o -> type.  % natural deductions
--name pf D. % E

andel   : pf (conj A B) -> pf A.


can : {A:o} pf A -> type.
atm : pf A -> type.

atm_andel : atm D → atm (andel D).

solve  : o -> type.       % solve goal formulas
assume : o -> type.       % assume program formulas
focus  : o -> p -> type.  % immediate entailment

i_andl : focus A1 P → focus (conj A1 A2) P.

schema c_ctx = some [a:o] block u: assume a, v:pf a , _t:atm v ;

rec cmpai:  {g:c_ctx}{E:[g |- pf (B[])]}[g |- atm (E[..])] ->
	       [g, q:p, u:focus (B[]) q  |-  solve (atom q)] =
% / total at (cmpai g a at)/
mlam g, E => fn at => case [g |- E[..] ] of
  | [g |- andel (D1[..] )] =>
    let [g |- atm_andel (CN1[..] )] = at in
    % Since nostrengthen means that the type of D1 will be reconstructed in g,
    % We cannot pass it in for B, which requires it to be closed!
   let [g,q:p, i: focus _  q |-  I1[..,q,i]] = cmpai [g] [g |- D1] [g |- CN1[..]] in
      [g,q,i |-  I1[..,q,(i_andl i)]]


;
