%%% Representation of the Proof of Type Preservation
%%% Author: Frank Pfenning, based on [Michaylov & Pfenning 92]

% Type preservation proof
rec tps :  (eval E V)[ ] -> (oft E T)[ ]
         -> (oft V T)[ ]  =
fn f => fn d =>
  case f of
    [ ] ev_z =>
    let [ ] tp_z = d in [ ] tp_z

  | [ ]  ev_s F1  =>
    let [ ] tp_s D1 = d in
    let [ ] C1      = tps ([ ] F1) ([ ] D1) in
      [ ] tp_s C1

  | [ ] ev_match_z F1 F =>
    let [ ] tp_match (\x.\u. (D2 x u)) D1 D = d   in
      tps ([ ] F1) ([ ] D1)

  | [ ] ev_match_s F2 F =>
    let [ ] tp_match (\x.\u. (D2 x u)) D1 D = d   in
    let [ ] tp_s C    =   tps ([ ] F) ([ ] D) in
     tps ([ ] F2) ([ ] (D2 _ C))


  | [ ] ev_pair D2 D1 =>
    let [ ] tp_pair P2 P1 = d in
    let [ ] Q1            = tps ([ ] D1) ([ ] P1) in
    let [ ] Q2            = tps ([ ] D2) ([ ] P2) in
      [ ] tp_pair Q2 Q1


  | [ ] ev_fst D1 =>
    let [ ] tp_fst P1 = d in
    let [ ] tp_pair Q2 Q1 = tps ([ ] D1) ([ ] P1) in
      [ ] Q1

  | [ ] ev_snd D2 =>
    let [ ] tp_snd P2 = d in
    let [ ] tp_pair Q2 Q1 = tps ([ ] D2) ([ ] P2) in
      [ ] Q2

  | [ ] ev_lam =>
    let [ ] tp_lam (\x. \u. (D x u)) = d in d

  | [ ] ev_app F3 F2 F1 =>
    let [ ] tp_app D2 D1             = d in
    let [ ] tp_lam (\x. \u. (D x u)) = tps ([ ] F1) ([ ] D1)  in
    let [ ] C2                       = tps ([ ] F2) ([ ] D2)  in
        tps ([ ] F3) ([ ] (D  _  C2))

  | [ ] ev_letv D2 D1 =>
    let [ ] tp_letv (\x.\u. P2 x u) P1 = d in
    let [ ] Q1 = tps ([ ] D1) ([ ] P1) in
      tps ([ ] D2) ([ ] P2 _ Q1)

  | [ ] ev_letn D2 =>
    let [ ] tp_letn  P2 P1 = d in
      tps ([ ] D2) ([ ] P2)

  | [ ] ev_fix D1 =>
    let [ ] tp_fix (\x.\u. P1 x u) = d in
      tps ([ ] D1) ([ ] P1 _ (tp_fix (\x.\u. P1 x u)))
;
