%{

  Example illustrating that we currently do not reconstruct
  type labels.

}%
LF exp: type =
  | lam: (exp -> exp) -> exp
;

LF tp: type =
  | arr: tp -> tp -> tp
;

LF oft: exp -> tp -> type =
  | t_lam: ({x:exp} oft x T -> oft (M x) S) -> oft (lam M) (arr T S)
;

schema ctx = exp ;

rec copy : (g:ctx) [g |- exp] -> [g |- exp] =
% / total e (copy g e)/
fn e => case e of
| [h |- lam (\x. M)] =>
  let [h,x:exp |- N] = copy [h, x:exp |- M] in
    [h |- lam \x. N ]
;
