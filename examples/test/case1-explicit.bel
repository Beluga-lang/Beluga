nat: type.
z   : nat.
suc : nat -> nat.

schema w = nat;

rec copynat1 : {g:(w)*} nat[g] -> nat[g] = 
  FN g => fn e => copynat1 [g] e;


rec copynat : {g:(w)*} nat[g] -> nat[g] =
FN g =>
 fn e =>
  case e of %not
    [g] z : nat[g] => [g] z
  | {U :: nat [g]} [g] suc (U ..)   : nat[g] => copynat [g] ([g] (U ..))
;
