# -*- coding: utf-8; indent-tabs-mode: nil; -*-

# Declare an OCaml library
LIBRARY = beluga-core

# Declare an OCaml package
PACK    = Core

# Declare the files the package will contain
FILES[] =
        abstract
        check
        common
        config
        context
        debug
        error
        gensym
        id
        pretty
        reconstruct
        store
        substitution
        syntax
        trail
        unify
        whnf
        monitor

# Declare one pseudo target for the package and one for the files it
# contains
.PHONY: core files pack

.DEFAULT: core

clean:
        rm $(filter-proper-targets $(ls R, .))
        rm $(filter %.omc,         $(ls R, .))

core: files pack $(OCamlLibrary $(LIBRARY), $(PACK))

if $(NATIVE_ENABLED)
    pack: $(OCamlPackage $(PACK), $(FILES))
else
    pack: $(QuietOCamlPackage $(PACK), $(FILES))

# **NOTE** Because of the way scoping for OCAMLFLAGS works, the pack
# target must come _BEFORE_ the files target, otherwise pack will be
# passed the -for-pack flag as well, which is not what we want

# Use the -for-pack flag for compiling the individual modules
OCAMLFLAGS += -for-pack $(PACK)
files: $(addsuffixes $(if $(BYTE_ENABLED), .cmo) $(if $(NATIVE_ENABLED), .cmx), $(FILES))
