tp : type.
arr : tp → tp → tp.
--name tp A.

tm : type.
lam : (tm → tm) → tm.
--name tm M.

oft : tm → tp → type.
t_lam : ({x : tm} oft x A → oft (M x) B) → oft (lam M) (arr A B).

rec copy : [ ⊢ oft M A ] → [ ⊢ oft M A ] =
fn d ⇒ case d of
    [ ⊢ t_lam \x. \u. D ] ⇒ [ ⊢ ?a ]
;
%:load input.bel
The file input.bel has been successfully loaded;
%:solve-lf-hole a
t_lam (\x. \x2. D)
;
