module type NATS = sig
	nat : type.	
	z : nat.
	s : nat -> nat.
end;

module Nats : NATS = struct
	nat : type.
	z : nat.
	s : nat -> nat.

	rec suc : [ |- nat ] -> [ |- nat ] =
	fn x => 
	let [ |- N ] = x in [ |- s N];
end;

