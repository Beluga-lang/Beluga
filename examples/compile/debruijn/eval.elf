%%% Mini-ML Natural Semantics
%%% Author: Frank Pfenning, based on [Michaylov & Pfenning 92]

LF eval : exp -> exp -> type = %name eval D.

% Natural Numbers
  | ev_z       : eval z z
  | ev_s       : eval E V -> eval (s E) (s V)
  | ev_match_z  : eval E2 V -> eval E1 z -> eval (match E1 E2 (\x. E3 x)) V
  | ev_match_s  : eval (E3 V1') V -> eval E1 (s V1') -> eval (match E1 E2 (\x. E3 x)) V

% Pairs
  | ev_pair : eval E2 V2 -> eval E1 V1 -> eval (pair E1 E2) (pair V1 V2)
  | ev_fst  : eval E (pair V1 V2) -> eval (fst E) V1
  | ev_snd  : eval E (pair V1 V2) -> eval (snd E) V2

% Functions
  | ev_lam  : eval (lam (\x. E x)) (lam (\x. E x))
  | ev_app  : eval (E1' V2) V -> eval E2 V2 -> eval E1 (lam (\x. E1' x)) -> eval (app E1 E2) V

% Definitions
  | ev_letv : eval (E2 V1) V -> eval E1 V1 -> eval (letv E1 (\x. E2 x)) V
  | ev_letn : eval (E2 E1) V -> eval (letn E1 (\x. E2 x)) V

% Recursion
  | ev_fix  : eval (E (fix (\x. E x))) V -> eval (fix (\x. E x)) V
;
