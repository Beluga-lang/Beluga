% The following is a list of `;;`-terminated syntactically invalid
% computation-level expressions with respect to the disambiguation state
% `disambiguation_state.json`.

% `nil' is a constructor
x .nil
;;

x .tl .nil .tl
;;

x .tl .hd .nil
;;

% Non-linear patterns
case x of (x, x) => x
;;

fun
| {$S : $[g, x : nat |- h]}
  {g1 : ctx1}
  x .Stream.tl (x cons nil) x3 .Stream.hd [g2] => ?
;;

fun
| {$S : $[g, x : nat |- h]}
  {g1 : ctx1}
  x1 .Stream.tl (x cons nil) x .Stream.hd [g2] => ?
;;

fun {g : ctx1} {g : ctx1} _ => ?
;;

fun {x : [ |- nat]} {x : [ |- nat]} _ => ?
;;

fun {#x : #[ |- nat]} {#x : #[ |- nat]} _ => ?
;;

fun {$S : $[g |- h]} {$S : $[g |- h]} _ => ?
;;

fun {x : [ |- nat]} x => ?
;;
