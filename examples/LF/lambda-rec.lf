exp : type.

z    : exp.
s    : exp -> exp.
lam  : (exp -> exp) -> exp.
app  : exp -> exp -> exp.


eval : exp -> exp -> type.
ev_z : eval z z.
ev_s : eval E V -> eval (s E) (s V).
ev_lam : eval (lam (\ x . E x)) (lam (\ x . E x)).
ev_app :
      eval E1 (lam (\ x . E1' x)) -> eval E2 V2 -> eval (E1' V2) V -> eval (app E1 E2) V.
