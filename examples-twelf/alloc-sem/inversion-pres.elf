%%% Simply Typed Lambda Calculus w/ small-step, allocation semantics
%%% Author: Matthew Fluet (June 2005)
%%% inversion-pres.elf

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Store Typing Inversion (Preservation)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

pres_st_judg_inversion_aux
               : sttp_wf ST -> st_wf S -> st_judg S ST ->
                 sttp_lookup ST L T ->
                 st_lookup S L V 
                  -> val_judg ST V T -> type.
%mode pres_st_judg_inversion_aux +DSTWf +DSWf +DStTc +SttpLookup +StLookup -DValTc.
-hit_hit       : pres_st_judg_inversion_aux DSTWf DSWf (st_judg_cons DValTc' _)
                                         (sttp_lookup_hit)
                                         (st_lookup_hit)
		                         DValTc
		  <- sttp_wf_cons_implies_extend_cons DSTWf DSttpExtend
		  <- sttp_weak_val_judg DValTc' DSttpExtend DValTc.
-miss_hit_contra
               : pres_st_judg_inversion_aux DSTWf DSWf (st_judg_cons DValTc' _)
                                         (sttp_lookup_miss DSttpLookup' DLocLt)
                                         (st_lookup_hit)
		                         DValTc
		  <- loc_lt_contradict DLocLt Absurd
		  <- raa_val_judg Absurd DValTc.
-miss_miss     : pres_st_judg_inversion_aux DSTWf DSWf (st_judg_cons _ DStTc')
                                         (sttp_lookup_miss DSttpLookup' _)
                                         (st_lookup_miss DStLookup' DLocLt)
                                         DValTc
		  <- sttp_wf_tail DSTWf DSTWf'
		  <- st_wf_tail DSWf DSWf'
		  <- pres_st_judg_inversion_aux DSTWf' DSWf' DStTc' 
                                             DSttpLookup' 
                                             DStLookup' 
                                             DValTc'
		  <- sttp_wf_cons_implies_extend_cons DSTWf DSttpExtend'
		  <- sttp_weak_val_judg DValTc' DSttpExtend' DValTc.
-miss_miss_contra
               : pres_st_judg_inversion_aux DSTWf DSWf (st_judg_cons DValTc' DStTc)
                                         (sttp_lookup_miss DSttpLookup  DLocLtB)
                                         (st_lookup_miss _ DLocLtA)
                                         DValTc
		  <- loc_lt_trans DLocLtA DLocLtB DLocLtC
		  <- loc_lt_contradict DLocLtC Absurd
		  <- raa_val_judg Absurd DValTc.
-hit_miss_contra
               : pres_st_judg_inversion_aux DSTWf DSWf (st_judg_cons DValTc' _)
                                         (sttp_lookup_hit)
                                         (st_lookup_miss DStLookup' DLocLt)
                                         DValTc
		  <- loc_lt_contradict DLocLt Absurd
		  <- raa_val_judg Absurd DValTc.
%terminates DSttpLookup (pres_st_judg_inversion_aux _ _ _ DSttpLookup _ _).
%worlds () (pres_st_judg_inversion_aux _ _ _ _ _ _).
%covers pres_st_judg_inversion_aux +DSTWf +DSWf +DStTc +SttpLookup +StLookup -DValTc.
%total DSttpLookup (pres_st_judg_inversion_aux _ _ _ DSttpLookup _ _).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

pres_st_judg_inversion 
               : stwf_judg S ST ->
                 sttp_lookup ST L T ->
                 st_lookup S L V 
                  -> val_judg ST V T -> type.
%mode pres_st_judg_inversion +DStTcWf +SttpLookup +StLookup -DValTc.
-              : pres_st_judg_inversion (stwf_judg_  DSTWf DSWf DStTc)
                                     DSttpLookup
                                     DStLookup
                                     DValTc
		  <- pres_st_judg_inversion_aux DSTWf DSWf DStTc
                                             DSttpLookup
                                             DStLookup
                                             DValTc.
%terminates {} (pres_st_judg_inversion _ _ _ _).
%worlds () (pres_st_judg_inversion _ _ _ _).
%covers pres_st_judg_inversion +DStTcWf +SttpLookup +StLookup -DValTc.
%total {} (pres_st_judg_inversion _ _ _ _).
