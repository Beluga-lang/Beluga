% coverage/subordination example;
%   same as subord.bel but includes a post-case-expression LF declaration,
%   demonstrating the need to postpone coverage to the end of a session.

bool : type.

term :type.
z    : term.
suc  : term -> term.
eq : term -> term -> bool.

schema termCtx = term;
schema boolCtx = bool;

rec fff : {g:boolCtx} [g, xx : bool |-  bool] -> [ |- term] =
mlam g => fn e =>
  case e of --not        % Shouldn't cover, due to "after" term constructor declared later
  | [g, xx : bool |-  eq U V]     => [ |- z]
%  | [g, xx : bool]  eq (U[..]) V     => [] z
%  | [g, xx : bool]  eq (U[..]) (Vx)     => [] z
  | [g, xx : bool |-  #px]   => [ |- z]
;

after : term -> bool -> bool.

rec fff2 : {g:boolCtx} [g, xx : bool |-  bool] -> [ |- term] =
mlam g => fn e =>
  case e of
  | [g, xx : bool |-  eq (Ux) (Vx)]     => [ |- z]
  | [g, xx : bool |-  #px]   => [ |- z]
;
