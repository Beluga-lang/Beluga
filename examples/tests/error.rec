% THESE ARE TEST CASES WHERE WE STILL NEED PROPER ERROR HANDLING
%  
% Major issue: 
%
% - Unbound variables or unknown constants are treated as free meta-variables.
%
%
% tp: type.
% nat: tp.
% arr: tp -> tp -> tp.
%
% exp : tp -> type.
%
% z : exp nat.
% s  : exp nat -> exp nat.
% lam : (exp T1 -> exp T2) -> exp (arr T1 T2).
% coe : exp T -> exp T.
%
% schema w = some [T:tp] block exp T;
%
% rec test : {g:(w)*} (exp T ![id]! )[g] -> (exp T ![id]! ) [g] =
% FN g =>  mlam T => 
%    fn x => 
%      case x of
%         box(g . coe E![id,x]!) =>  box(g . coe E![id,x]!)
%         % WRONG SUBSTITUTION -- x NOT DEFINED
  